Pod::Spec.new do |s|
  s.name = '<%= @app.name %>'
  s.version = '<%= @parser.constants.version %>'
  s.license = <%= @parser.constants.license%>
  s.homepage = '<%= @parser.constants.homepage %>'
  s.authors = '<%= @parser.constants.authors %>'
  s.summary = '<%= @app.summary %>'

  s.swift_version = ['5.0']

  s.ios.deployment_target = '<%= @parser.constants.deployment_target %>'

  s.source = { git: '<%= @parser.constants.homepage  %>', tag: s.version }
  s.source_files = '<%= @app.source_files %>'
  s.resource_bundle = { '<%= @app.resource_bundle_name %>' => ['<%= @app.resource_files %>']}
  <% @app.depedencies.each do |dependency| %>
  s.dependency '<%= dependency %>', '<%= @parser.constants.version %>'
  <% end %>
  s.pod_target_xcconfig = s.consumer(:ios).pod_target_xcconfig.merge(
    'ENABLE_BITCODE' => 'NO'
  )
  s.app_spec 'SampleApp' do |app_spec|
    app_spec.source_files = '<%= @app.main_source_files %>'

    app_spec.pod_target_xcconfig = s.consumer(:ios).pod_target_xcconfig.merge(
      'PRODUCT_NAME' => '<%= @app.name %> Sample App',
      'PRODUCT_SHORT_NAME' => '<%= @app.name %> Sample App',
      'INFOPLIST_FILE' => '<%= @app.info_plist_path %>',
      'SKIP_INSTALL' => 'NO',
      'ENABLE_BITCODE' => 'NO'
    )

    app_spec.script_phases = [
      {
        name: 'Run the setup script',
        script: 'FRAMEWORKS="${BUILT_PRODUCTS_DIR}/${FRAMEWORKS_FOLDER_PATH}" && "${FRAMEWORKS}/ReaderSDK2.framework/setup" || { echo "Setup script failed (See README)." >&2 && exit 1 }',
        shell_path: '/bin/zsh',
        execution_position: :after_compile
      }
    ]
  end
end
